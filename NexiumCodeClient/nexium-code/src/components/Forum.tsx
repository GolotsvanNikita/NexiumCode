import React, { useState, useMemo } from "react";
import "./Forum.css";
import { Link, useNavigate } from "react-router-dom";
import iconChat from "/icon1.png";

interface Topic {
  id: number;
  title: string;
  author: string;
  avatar: string;
  date: string;
  replies: number;
  lastReply: {
    author: string;
    time: string;
  };
  category: string;
  status: "open" | "solved";
}

export const Forum: React.FC = () => {
  const navigate = useNavigate();

  const [topics] = useState<Topic[]>([
    {
      id: 1,
      title: "–ö–∞–∫ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å React-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ?",
      author: "Alina Rubak",
      avatar: "/avatar1.jpg",
      date: "2 –¥–Ω—è –Ω–∞–∑–∞–¥",
      replies: 5,
      lastReply: { author: "Oleg Makey", time: "3 —á–∞—Å–∞ –Ω–∞–∑–∞–¥" },
      category: "JavaScript",
      status: "open",
    },
    {
      id: 2,
      title: "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å—é –≤ C#",
      author: "Ivan Petrov",
      avatar: "/avatar2.png",
      date: "5 –¥–Ω–µ–π –Ω–∞–∑–∞–¥",
      replies: 2,
      lastReply: { author: "Dmitry B.", time: "–≤—á–µ—Ä–∞" },
      category: "C#",
      status: "solved",
    },
    {
      id: 3,
      title: "–°–æ–≤–µ—Ç—ã –ø–æ –≤–µ—Ä—Å—Ç–∫–µ –∞–¥–∞–ø—Ç–∏–≤–Ω—ã—Ö —Å–∞–π—Ç–æ–≤?",
      author: "Maria Sidorova",
      avatar: "/avatar3.png",
      date: "–Ω–µ–¥–µ–ª—é –Ω–∞–∑–∞–¥",
      replies: 7,
      lastReply: { author: "Alex K.", time: "5 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥" },
      category: "HTML/CSS",
      status: "open",
    },
  ]);

  const [categoryFilter, setCategoryFilter] = useState("–í—Å–µ");
  const [statusFilter, setStatusFilter] = useState("–í—Å–µ");
  const [sortBy, setSortBy] = useState("–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ");
  const [searchQuery, setSearchQuery] = useState("");

  const filteredTopics = useMemo(() => {
    let filtered = [...topics];


    if (categoryFilter !== "–í—Å–µ") {
      filtered = filtered.filter((t) => t.category === categoryFilter);
    }


    if (statusFilter !== "–í—Å–µ") {
      filtered = filtered.filter((t) => t.status === statusFilter);
    }


    if (searchQuery.trim() !== "") {
      const query = searchQuery.toLowerCase();
      filtered = filtered.filter(
        (t) =>
          t.title.toLowerCase().includes(query) ||
          t.author.toLowerCase().includes(query) ||
          t.category.toLowerCase().includes(query)
      );
    }

    if (sortBy === "–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ") filtered.sort((a, b) => b.replies - a.replies);
    if (sortBy === "–ù–æ–≤—ã–µ") filtered.sort((a, b) => b.id - a.id);

    return filtered;
  }, [topics, categoryFilter, statusFilter, sortBy, searchQuery]);

  return (
    <div className="forum-page">
      <div className="forum-header">
        <h1 className="forum-title">–§–æ—Ä—É–º</h1>
        <button
          className="create-topic-button"
          onClick={() => navigate("/forum/create")}
        >
          + –°–æ–∑–¥–∞—Ç—å —Ç–µ–º—É
        </button>
      </div>

  
      <div className="filters">
        <input
          type="text"
          placeholder="–ü–æ–∏—Å–∫ –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É..."
          value={searchQuery}
          onChange={(e) => setSearchQuery(e.target.value)}
          className="search-input"
        />

        <select className="filterBox" onChange={(e) => setCategoryFilter(e.target.value)}>
          <option>–í—Å–µ</option>
          <option>JavaScript</option>
          <option>C#</option>
          <option>HTML/CSS</option>
        </select>

        <select className="filterBox" onChange={(e) => setStatusFilter(e.target.value)}>
          <option>–í—Å–µ</option>
          <option value="open">–û—Ç–∫—Ä—ã—Ç–∞</option>
          <option value="solved">–†–µ—à–µ–Ω–∞</option>
        </select>

        <select  className="filterBox" onChange={(e) => setSortBy(e.target.value)}>
          <option>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ</option>
          <option>–ù–æ–≤—ã–µ</option>
        </select>
      </div>


      <div className="topics-list">
        {filteredTopics.length === 0 ? (
          <div className="empty-message">–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É üòï</div>
        ) : (
          filteredTopics.map((topic) => (
            <Link
              key={topic.id}
              to={`/forum/${topic.id}`}
              state={{ topic }}
              className="topic-card-link"
              style={{ textDecoration: "none", color: "inherit" }}
            >
              <div className="topic-card" style={{ cursor: "pointer" }}>
                <img
                  src={topic.avatar}
                  alt={topic.author}
                  className="topic-avatar"
                />
                <div className="topic-content">
                  <div className="topic-main">
                    <h3 className="topic-title">{topic.title}</h3>
                    <span className="topic-meta">
                      –ê–≤—Ç–æ—Ä: {topic.author} ‚Ä¢ {topic.date}
                    </span>
                  </div>
                  <div className="topic-info">
                    <span className="topic-replies">
                      <img className = "icon"src = {iconChat}></img> {topic.replies} –æ—Ç–≤–µ—Ç–æ–≤
                    </span>
                    <span className="topic-last">
                      –ü–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç: <b>{topic.lastReply.author}</b> ‚Äî{" "}
                      {topic.lastReply.time}
                    </span>
                    <span
                      className={`topic-category ${topic.category.toLowerCase()}`}
                    >
                      {topic.category}
                    </span>
                    <span className={`topic-status ${topic.status}`}>
                      {topic.status === "solved" ? "–†–µ—à–µ–Ω–æ" : "–û—Ç–∫—Ä—ã—Ç–∞"}
                    </span>
                  </div>
                </div>
              </div>
            </Link>
          ))
        )}
      </div>
    </div>
  );
};
